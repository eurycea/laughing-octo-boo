(function(){"use strict";var a,b;b=["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","dewApp.filters","dewApp.services","dewApp.controllers","dewApp.directives","dewApp.common","dewApp.routeConfig"],a=angular.module("dewApp",b),angular.module("dewApp.routeConfig",["ngRoute"]).config(["$routeProvider",function(a){return a.when("/",{templateUrl:"/views/view.html"}).when("/users/create",{templateUrl:"/views/create.html"}).when("/users/edit/:firstName/:lastName",{templateUrl:"/views/update.html"}).when("/tasks/create",{templateUrl:"/views/create_task.html"}).when("/task/edit/:description",{templateUrl:"/views/update_task.html"}).otherwise({redirectTo:"/"})}]).config(["$locationProvider",function(a){return a.html5Mode({enabled:!0,requireBase:!1})}]),this.commonModule=angular.module("dewApp.common",[]),this.controllersModule=angular.module("dewApp.controllers",[]),this.servicesModule=angular.module("dewApp.services",[]),this.modelsModule=angular.module("dewApp.models",[]),this.directivesModule=angular.module("dewApp.directives",[]),this.filtersModule=angular.module("dewApp.filters",[])}).call(this),function(){var a;a=function(){function a(a,b,c){this.$log=a,this.$location=b,this.TaskService=c,this.$log.debug("constructing CreateTaskController"),this.task={}}return a.prototype.createTask=function(){return this.$log.debug("createTask"),this.task.complete=!1,this.TaskService.createTask(this.task).then(function(a){return function(b){return a.$log.debug(""),a.task=b,a.$location.path("/")}}(this),function(a){return function(b){return a.$log.error("Unable to create Task: "+b)}}(this))},a}(),angular.module("dewApp.controllers").controller("CreateTaskCtrl",["$log","$location","TaskService",a])}.call(this),function(){var a;a=function(){function a(a,b){this.$log=a,this.TaskService=b,this.$log.debug("constructing TaskController new"),this.tasks=[],this.error=null,this.getAllTasks()}return a.prototype.getAllTasks=function(){return this.$log.debug("getAllTasks()"),this.TaskService.listTasks().then(function(a){return function(b){return a.$log.debug("Promise returned "+b.length+" Tasks"),a.tasks=b}}(this),function(a){return function(b){return a.$log.error("Unable to get Tasks: "+b),a.error=b}}(this))},a}(),angular.module("dewApp.controllers").controller("TaskCtrl",["$log","TaskService",a])}.call(this),function(){var a;a=function(){function a(a,b,c,d){this.$log=a,this.$location=b,this.$routeParams=c,this.TaskService=d,this.$log.debug("construcing UpdateTaskCtrl"),this.task={},this.findTask()}return a.prototype.updateTask=function(){return this.$log.debug("updateTask()"),this.task.complete=!1,this.TaskService.updateTask(this.$routeParams.description,this.task)},a.prototype.findTask=function(){var a;return a=this.$routeParams.description,this.$log.debug("find Task route params: "+a),this.TaskService.listTasks().then(function(b){return function(c){return b.$log.debug("promise returned "+c.length+" tasks"),b.task=c.filter(function(b){return b.description===a})[0]}}(this),function(a){return function(b){return a.$log.error("unable to get tasks: "+b)}}(this))},a}(),angular.module("dewApp.controllers").controller("UpdateTaskCtrl",["$log","$location","$routeParams","TaskService",a])}.call(this),function(){var a;a=function(){function a(a,b,c){this.$log=a,this.$http=b,this.$q=c,this.$log.debug("constructing TaskService")}return a.headers={Accept:"application/json","Content-Type":"application/json"},a.defaultConfig={headers:a.headers},a.prototype.listTasks=function(){var a;return this.$log.debug("listTasks()"),a=this.$q.defer(),this.$http.get("http://localhost:9000/tasks").success(function(b){return function(c,d){return b.$log.info("successfully listed tasks - status "+d),a.resolve(c)}}(this)).error(function(b){return function(c,d){return b.$log.error("Failed to list tasks - status "+d),a.reject(c)}}(this)),a.promise},a.prototype.createTask=function(a){var b;return this.$log.debug("createTask "+angular.toJson(a,!0)),b=this.$q.defer(),this.$http.post("http://localhost:9000/task",a).success(function(a){return function(c,d){return a.$log.info("successfully created task - status "+d),b.resolve(c)}}(this)).error(function(a){return function(b,c){return a.$log.error("Failed to create task - status "+c),deffered.reject(b)}}(this)),b.promise},a.prototype.updateTask=function(a,b){var c;return this.$log.debug("updateTask "+angular.toJson(b,!0)+" with description: "+a),c=this.$q.defer(),this.$http.put("localhost:9000/task/"+a,b).success(function(a){return function(b,d){return a.$log.info("Successfully updated task - status "+d),c.resolve(b)}}(this)).error(function(a){return function(b,d){return a.$log.error("Failed to update task - status "+d),c.reject(b)}}(this)),c.promise},a}(),angular.module("dewApp.services").service("TaskService",["$log","$http","$q",a])}.call(this);